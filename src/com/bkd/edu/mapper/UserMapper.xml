<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bkd.edu.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.bkd.edu.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="picurl" property="picurl" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, username, password, level, status, picurl, sign, email
  </sql>
  
  
  <update id="updateUserPic" parameterType="User" >
    update user
    set 
    picurl = #{picurl,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
   <update id="updatePasswordByEmail" parameterType="User" >
    update user
    set 
    password = #{password,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER} and email = #{email,jdbcType=VARCHAR}
  </update>
  
  <select id="findUserByUsernameAndEmail" parameterType="User" resultMap="BaseResultMap">
  select 
  <include refid="Base_Column_List" />
  from user
  where username = #{username,jdbcType=INTEGER} and email = #{email,jdbcType=VARCHAR}
  </select>
  
  <select id="findUsersByUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select 
  <include refid="Base_Column_List" />
  from user
  where user_id = #{userId,jdbcType=INTEGER}
  </select>
  
  <select id="findAllUsers" parameterType="User" resultMap="BaseResultMap">
  select 
  <include refid="Base_Column_List" />
  from user
  </select>
  <!--  -->
  <update id="freezeUserByUserid" parameterType="java.lang.Integer" >
    update user
    set 
    status = 0
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <!--  -->
    <update id="unfreezeUserByUserid" parameterType="java.lang.Integer" >
    update user
    set 
    status = 1
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <!--  -->
  <select id="findAllUsersExceptAdmin" parameterType="User" resultMap="BaseResultMap">
  select 
  <include refid="Base_Column_List" />
  from user
  where level = 1
  </select>
  <!-- 通过用户名查找用户 -->
  <select id="findUserByUsername" parameterType="User" resultMap="BaseResultMap">
  select 
    <include refid="Base_Column_List" />
    from user
    where username=#{username}
  </select>
     <!-- 登陆使用
  		通过用户名和密码查找用户表
  		输入User类
  		返回Map<User>
   -->
  <select id="findUserByUsernameAndPassword" parameterType="User" resultMap="BaseResultMap">
  select 
    <include refid="Base_Column_List" />
    from user
    where username=#{username} and password=#{password}
  </select>
  <!-- 注册用户使用
  		用户输入用户名和密码
  		其他表参数确定填入
  		不返回值
  		 -->
  <insert id="insertUser" useGeneratedKeys="true" keyProperty="userId" parameterType="User">
  insert into user
      (
        username,
        password,
        level,
        status,
        picurl,
        sign,
        email
      ) values (
        #{username},
        #{password},
        #{level},
        #{status},
        #{picurl},
        #{sign},
        #{email}
        )
  </insert>
  <!-- ............................................................................... -->
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bkd.edu.model.User" >
    insert into user (user_id, username, password, 
      level, status, picurl, 
      sign, email)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{picurl,jdbcType=VARCHAR}, 
      #{sign,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bkd.edu.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="picurl != null" >
        picurl,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="picurl != null" >
        #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bkd.edu.model.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="picurl != null" >
        picurl = #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bkd.edu.model.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      picurl = #{picurl,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>